// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using otelyonet.Data;

namespace otelyonet.Migrations
{
    [DbContext(typeof(OtelYonetDBContext))]
    partial class OtelYonetDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("otelyonet.Models.Birim", b =>
                {
                    b.Property<int>("BirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirimAdı")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BirimID");

                    b.ToTable("Birimler");

                    b.HasData(
                        new
                        {
                            BirimID = 1,
                            BirimAdı = "İnsan Kaynakları"
                        },
                        new
                        {
                            BirimID = 2,
                            BirimAdı = "F&B"
                        },
                        new
                        {
                            BirimID = 3,
                            BirimAdı = "Satın Alma"
                        },
                        new
                        {
                            BirimID = 4,
                            BirimAdı = "Güvenlik"
                        },
                        new
                        {
                            BirimID = 5,
                            BirimAdı = "House Keeping"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Cinsiyet", b =>
                {
                    b.Property<int>("CinsiyetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CinsiyetAdı")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CinsiyetID");

                    b.ToTable("Cinsiyetler");

                    b.HasData(
                        new
                        {
                            CinsiyetID = 1,
                            CinsiyetAdı = "Erkek"
                        },
                        new
                        {
                            CinsiyetID = 2,
                            CinsiyetAdı = "Kadın"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.DuşTipi", b =>
                {
                    b.Property<int>("DuşTipiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DuşTipiAdı")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("DuşTipiID");

                    b.ToTable("DuşTipleri");

                    b.HasData(
                        new
                        {
                            DuşTipiID = 1,
                            DuşTipiAdı = "Jakuzi"
                        },
                        new
                        {
                            DuşTipiID = 2,
                            DuşTipiAdı = "Standart"
                        },
                        new
                        {
                            DuşTipiID = 3,
                            DuşTipiAdı = "Küvet"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Hizmet", b =>
                {
                    b.Property<int>("HizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("HizmetAdı")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ResimYolu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HizmetID");

                    b.ToTable("Hizmetler");

                    b.HasData(
                        new
                        {
                            HizmetID = 1,
                            Açıklama = " Tam olimpik kapalı havuz",
                            HizmetAdı = "Kapalı Havuz",
                            ResimYolu = "1.jpg"
                        },
                        new
                        {
                            HizmetID = 2,
                            Açıklama = " 24 saat 65 farklı çeşit ",
                            HizmetAdı = "Açık Büfe",
                            ResimYolu = "2.jpg"
                        },
                        new
                        {
                            HizmetID = 3,
                            Açıklama = "Tenis,Basketbol,Futbol",
                            HizmetAdı = "Spor Kompleksi",
                            ResimYolu = "3.jpg"
                        },
                        new
                        {
                            HizmetID = 4,
                            Açıklama = "gbbgf",
                            HizmetAdı = "Masaj",
                            ResimYolu = "4.jpg"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BabaKategoriID")
                        .HasColumnType("int");

                    b.Property<string>("KategoriAdı")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("KategoriID");

                    b.HasIndex("BabaKategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("otelyonet.Models.Kullanıcı", b =>
                {
                    b.Property<int>("KullanıcıID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("KullanıcıID");

                    b.HasIndex("RolID");

                    b.ToTable("Kullanıcılar");

                    b.HasData(
                        new
                        {
                            KullanıcıID = 1,
                            EPosta = "abc@test.com",
                            RolID = 1,
                            Sifre = "123345"
                        },
                        new
                        {
                            KullanıcıID = 2,
                            EPosta = "gfdg@test.com",
                            RolID = 2,
                            Sifre = "54321"
                        },
                        new
                        {
                            KullanıcıID = 3,
                            EPosta = "dfg@test.com",
                            RolID = 3,
                            Sifre = "789456"
                        },
                        new
                        {
                            KullanıcıID = 4,
                            EPosta = "jkl@test.com",
                            RolID = 4,
                            Sifre = "357753"
                        },
                        new
                        {
                            KullanıcıID = 5,
                            EPosta = "mnb@test.com",
                            RolID = 5,
                            Sifre = "987456"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Manzara", b =>
                {
                    b.Property<int>("ManzaraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManzaraAdı")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ManzaraID");

                    b.ToTable("Manzaralar");

                    b.HasData(
                        new
                        {
                            ManzaraID = 1,
                            ManzaraAdı = "Deniz"
                        },
                        new
                        {
                            ManzaraID = 2,
                            ManzaraAdı = "Orman"
                        },
                        new
                        {
                            ManzaraID = 3,
                            ManzaraAdı = "Boğaz"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Müşteri", b =>
                {
                    b.Property<int>("MüşteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinsiyetID")
                        .HasColumnType("int");

                    b.Property<string>("MobilNO")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MüşteriSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MüşteriTamAdı")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MüşteriTipiID")
                        .HasColumnType("int");

                    b.HasKey("MüşteriID");

                    b.HasIndex("CinsiyetID");

                    b.HasIndex("MüşteriTipiID");

                    b.ToTable("Müşteriler");

                    b.HasData(
                        new
                        {
                            MüşteriID = 1,
                            CinsiyetID = 1,
                            MobilNO = "5555555555",
                            MüşteriSoyadi = "cihan",
                            MüşteriTamAdı = "iskender",
                            MüşteriTipiID = 1
                        },
                        new
                        {
                            MüşteriID = 2,
                            CinsiyetID = 1,
                            MobilNO = "5555555553",
                            MüşteriSoyadi = "can",
                            MüşteriTamAdı = "ali",
                            MüşteriTipiID = 1
                        },
                        new
                        {
                            MüşteriID = 3,
                            CinsiyetID = 2,
                            MobilNO = "5555555554",
                            MüşteriSoyadi = "aslan",
                            MüşteriTamAdı = "fatma",
                            MüşteriTipiID = 2
                        });
                });

            modelBuilder.Entity("otelyonet.Models.MüşteriTipi", b =>
                {
                    b.Property<int>("MüşteriTipiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MüşteriTipiAdı")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MüşteriTipiID");

                    b.ToTable("MüşteriTipleri");

                    b.HasData(
                        new
                        {
                            MüşteriTipiID = 1,
                            MüşteriTipiAdı = "Bireysel"
                        },
                        new
                        {
                            MüşteriTipiID = 2,
                            MüşteriTipiAdı = "Kurumsal"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Oda", b =>
                {
                    b.Property<int>("OdaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KatNO")
                        .HasColumnType("int");

                    b.Property<string>("OdaAdı")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("OdaFiyatı")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("YatakSayısı")
                        .HasColumnType("int");

                    b.HasKey("OdaID");

                    b.ToTable("Odalar");

                    b.HasData(
                        new
                        {
                            OdaID = 1,
                            KatNO = 1,
                            OdaAdı = "101",
                            OdaFiyatı = 100m,
                            YatakSayısı = 3
                        },
                        new
                        {
                            OdaID = 2,
                            KatNO = 1,
                            OdaAdı = "102",
                            OdaFiyatı = 150m,
                            YatakSayısı = 5
                        },
                        new
                        {
                            OdaID = 3,
                            KatNO = 1,
                            OdaAdı = "103",
                            OdaFiyatı = 200m,
                            YatakSayısı = 2
                        },
                        new
                        {
                            OdaID = 4,
                            KatNO = 2,
                            OdaAdı = "200",
                            OdaFiyatı = 400m,
                            YatakSayısı = 1
                        },
                        new
                        {
                            OdaID = 5,
                            KatNO = 2,
                            OdaAdı = "280",
                            OdaFiyatı = 550m,
                            YatakSayısı = 6
                        },
                        new
                        {
                            OdaID = 6,
                            KatNO = 3,
                            OdaAdı = "360",
                            OdaFiyatı = 1100m,
                            YatakSayısı = 2
                        },
                        new
                        {
                            OdaID = 7,
                            KatNO = 5,
                            OdaAdı = "550",
                            OdaFiyatı = 880m,
                            YatakSayısı = 3
                        },
                        new
                        {
                            OdaID = 8,
                            KatNO = 5,
                            OdaAdı = "590",
                            OdaFiyatı = 740m,
                            YatakSayısı = 4
                        },
                        new
                        {
                            OdaID = 9,
                            KatNO = 4,
                            OdaAdı = "485",
                            OdaFiyatı = 930m,
                            YatakSayısı = 1
                        });
                });

            modelBuilder.Entity("otelyonet.Models.OdaResim", b =>
                {
                    b.Property<int>("OdaResimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OdaID")
                        .HasColumnType("int");

                    b.Property<string>("ResimYolu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("OdaResimID");

                    b.HasIndex("OdaID");

                    b.ToTable("OdaResimleri");
                });

            modelBuilder.Entity("otelyonet.Models.OdaTipi", b =>
                {
                    b.Property<int>("OdaTipiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OdaTipiAdı")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("OdaTipiID");

                    b.ToTable("OdaTipleri");

                    b.HasData(
                        new
                        {
                            OdaTipiID = 1,
                            OdaTipiAdı = "King"
                        },
                        new
                        {
                            OdaTipiID = 2,
                            OdaTipiAdı = "Premium"
                        },
                        new
                        {
                            OdaTipiID = 3,
                            OdaTipiAdı = "Standart"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.OdaÖzellik", b =>
                {
                    b.Property<int>("OdaÖzellikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("DuşTipiID")
                        .HasColumnType("int");

                    b.Property<int>("ManzaraID")
                        .HasColumnType("int");

                    b.Property<int>("OdaID")
                        .HasColumnType("int");

                    b.Property<int>("OdaTipiID")
                        .HasColumnType("int");

                    b.HasKey("OdaÖzellikID");

                    b.HasIndex("DuşTipiID");

                    b.HasIndex("ManzaraID");

                    b.HasIndex("OdaID");

                    b.HasIndex("OdaTipiID");

                    b.ToTable("OdaÖzellikleri");

                    b.HasData(
                        new
                        {
                            OdaÖzellikID = 1,
                            Açıklama = "",
                            DuşTipiID = 1,
                            ManzaraID = 1,
                            OdaID = 1,
                            OdaTipiID = 1
                        },
                        new
                        {
                            OdaÖzellikID = 2,
                            Açıklama = "",
                            DuşTipiID = 2,
                            ManzaraID = 2,
                            OdaID = 2,
                            OdaTipiID = 2
                        },
                        new
                        {
                            OdaÖzellikID = 3,
                            Açıklama = "",
                            DuşTipiID = 3,
                            ManzaraID = 3,
                            OdaID = 3,
                            OdaTipiID = 3
                        },
                        new
                        {
                            OdaÖzellikID = 4,
                            Açıklama = "",
                            DuşTipiID = 1,
                            ManzaraID = 1,
                            OdaID = 4,
                            OdaTipiID = 1
                        },
                        new
                        {
                            OdaÖzellikID = 5,
                            Açıklama = "",
                            DuşTipiID = 2,
                            ManzaraID = 2,
                            OdaID = 5,
                            OdaTipiID = 2
                        },
                        new
                        {
                            OdaÖzellikID = 6,
                            Açıklama = "",
                            DuşTipiID = 3,
                            ManzaraID = 3,
                            OdaID = 6,
                            OdaTipiID = 3
                        },
                        new
                        {
                            OdaÖzellikID = 7,
                            Açıklama = "",
                            DuşTipiID = 1,
                            ManzaraID = 1,
                            OdaID = 7,
                            OdaTipiID = 1
                        },
                        new
                        {
                            OdaÖzellikID = 8,
                            Açıklama = "",
                            DuşTipiID = 2,
                            ManzaraID = 2,
                            OdaID = 8,
                            OdaTipiID = 2
                        },
                        new
                        {
                            OdaÖzellikID = 9,
                            Açıklama = "",
                            DuşTipiID = 3,
                            ManzaraID = 3,
                            OdaID = 9,
                            OdaTipiID = 3
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Profil", b =>
                {
                    b.Property<int>("ProfilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CepNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullanıcıID")
                        .HasColumnType("int");

                    b.Property<string>("Meslek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResimYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşNO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfilID");

                    b.HasIndex("KullanıcıID");

                    b.ToTable("Profiller");
                });

            modelBuilder.Entity("otelyonet.Models.Rezervasyon", b =>
                {
                    b.Property<int>("RezervasyonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BasTarih")
                        .HasColumnType("Date");

                    b.Property<int>("BebekSayısı")
                        .HasColumnType("int");

                    b.Property<DateTime>("BitTarih")
                        .HasColumnType("Date");

                    b.Property<int>("MüşteriID")
                        .HasColumnType("int");

                    b.Property<int>("OdaID")
                        .HasColumnType("int");

                    b.Property<decimal>("RezervOdaFiyatı")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("RezervasyonTarihi")
                        .HasColumnType("Date");

                    b.Property<int>("YetişkinSayısı")
                        .HasColumnType("int");

                    b.Property<int>("ÇocukSayısı")
                        .HasColumnType("int");

                    b.Property<int>("ÖdemeTipiID")
                        .HasColumnType("int");

                    b.HasKey("RezervasyonID");

                    b.HasIndex("MüşteriID");

                    b.HasIndex("OdaID");

                    b.HasIndex("ÖdemeTipiID");

                    b.ToTable("Rezervasyonlar");

                    b.HasData(
                        new
                        {
                            RezervasyonID = 1,
                            BasTarih = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BebekSayısı = 0,
                            BitTarih = new DateTime(2021, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MüşteriID = 1,
                            OdaID = 1,
                            RezervOdaFiyatı = 100m,
                            RezervasyonTarihi = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YetişkinSayısı = 1,
                            ÇocukSayısı = 0,
                            ÖdemeTipiID = 2
                        },
                        new
                        {
                            RezervasyonID = 2,
                            BasTarih = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BebekSayısı = 0,
                            BitTarih = new DateTime(2021, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MüşteriID = 2,
                            OdaID = 2,
                            RezervOdaFiyatı = 200m,
                            RezervasyonTarihi = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YetişkinSayısı = 2,
                            ÇocukSayısı = 1,
                            ÖdemeTipiID = 1
                        },
                        new
                        {
                            RezervasyonID = 3,
                            BasTarih = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BebekSayısı = 3,
                            BitTarih = new DateTime(2021, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MüşteriID = 3,
                            OdaID = 3,
                            RezervOdaFiyatı = 400m,
                            RezervasyonTarihi = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YetişkinSayısı = 2,
                            ÇocukSayısı = 2,
                            ÖdemeTipiID = 2
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RolAdı")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RolID");

                    b.ToTable("Roller");

                    b.HasData(
                        new
                        {
                            RolID = 1,
                            RolAdı = "Admin"
                        },
                        new
                        {
                            RolID = 2,
                            RolAdı = "Supervisor"
                        },
                        new
                        {
                            RolID = 3,
                            RolAdı = "Anonim"
                        },
                        new
                        {
                            RolID = 4,
                            RolAdı = "Gold"
                        },
                        new
                        {
                            RolID = 5,
                            RolAdı = "Memur"
                        },
                        new
                        {
                            RolID = 6,
                            RolAdı = "Platin"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Tesis", b =>
                {
                    b.Property<int>("TesisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("TesisAdı")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("TesisID");

                    b.ToTable("Tesisler");

                    b.HasData(
                        new
                        {
                            TesisID = 1,
                            Açıklama = "Spor Kompleksimiz 350 kişi kapasitelidir",
                            TesisAdı = "Spor Kompleksi"
                        },
                        new
                        {
                            TesisID = 2,
                            Açıklama = "Düğün salonumuz 1250 kişiliktir",
                            TesisAdı = "Düğün Salonu"
                        },
                        new
                        {
                            TesisID = 3,
                            Açıklama = "Uzman 50 Kişilik kadro",
                            TesisAdı = "Spa Center"
                        },
                        new
                        {
                            TesisID = 4,
                            Açıklama = "200 Kişilik kapasite",
                            TesisAdı = "Gym"
                        },
                        new
                        {
                            TesisID = 5,
                            Açıklama = "Eğlence Merkezimiz 2500 kişi kapasitelidir",
                            TesisAdı = "Eğlence Merkezi"
                        },
                        new
                        {
                            TesisID = 6,
                            Açıklama = "Tam Olimpik Kapalı Havuz",
                            TesisAdı = "Kapalı Havuz"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.ÖdemeTipi", b =>
                {
                    b.Property<int>("ÖdemeTipiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ÖdemeTipiAdı")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ÖdemeTipiID");

                    b.ToTable("ÖdemeTipleri");

                    b.HasData(
                        new
                        {
                            ÖdemeTipiID = 1,
                            ÖdemeTipiAdı = "Peşin Ödeme"
                        },
                        new
                        {
                            ÖdemeTipiID = 2,
                            ÖdemeTipiAdı = "Kredi Kartı İle"
                        });
                });

            modelBuilder.Entity("otelyonet.Models.Kategori", b =>
                {
                    b.HasOne("otelyonet.Models.Kategori", "BabaKategori")
                        .WithMany()
                        .HasForeignKey("BabaKategoriID");

                    b.Navigation("BabaKategori");
                });

            modelBuilder.Entity("otelyonet.Models.Kullanıcı", b =>
                {
                    b.HasOne("otelyonet.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("otelyonet.Models.Müşteri", b =>
                {
                    b.HasOne("otelyonet.Models.Cinsiyet", "Cinsiyet")
                        .WithMany()
                        .HasForeignKey("CinsiyetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.MüşteriTipi", "MüşteriTipi")
                        .WithMany()
                        .HasForeignKey("MüşteriTipiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinsiyet");

                    b.Navigation("MüşteriTipi");
                });

            modelBuilder.Entity("otelyonet.Models.OdaResim", b =>
                {
                    b.HasOne("otelyonet.Models.Oda", "Oda")
                        .WithMany()
                        .HasForeignKey("OdaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oda");
                });

            modelBuilder.Entity("otelyonet.Models.OdaÖzellik", b =>
                {
                    b.HasOne("otelyonet.Models.DuşTipi", "DuşTipi")
                        .WithMany()
                        .HasForeignKey("DuşTipiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.Manzara", "Manzara")
                        .WithMany()
                        .HasForeignKey("ManzaraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.Oda", "Oda")
                        .WithMany()
                        .HasForeignKey("OdaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.OdaTipi", "OdaTipi")
                        .WithMany("OdaÖzellikleri")
                        .HasForeignKey("OdaTipiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuşTipi");

                    b.Navigation("Manzara");

                    b.Navigation("Oda");

                    b.Navigation("OdaTipi");
                });

            modelBuilder.Entity("otelyonet.Models.Profil", b =>
                {
                    b.HasOne("otelyonet.Models.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("otelyonet.Models.Rezervasyon", b =>
                {
                    b.HasOne("otelyonet.Models.Müşteri", "Müşteri")
                        .WithMany()
                        .HasForeignKey("MüşteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.Oda", "Oda")
                        .WithMany()
                        .HasForeignKey("OdaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otelyonet.Models.ÖdemeTipi", "ÖdemeTipi")
                        .WithMany()
                        .HasForeignKey("ÖdemeTipiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Müşteri");

                    b.Navigation("Oda");

                    b.Navigation("ÖdemeTipi");
                });

            modelBuilder.Entity("otelyonet.Models.OdaTipi", b =>
                {
                    b.Navigation("OdaÖzellikleri");
                });
#pragma warning restore 612, 618
        }
    }
}
